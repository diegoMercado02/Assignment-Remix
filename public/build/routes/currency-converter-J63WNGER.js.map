{
  "version": 3,
  "sources": ["../../../app/routes/currency-converter.tsx", "../../../app/components/CurrencyDropdown.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/currency-converter.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/currency-converter.tsx\");\n  import.meta.hot.lastModified = \"1701690908963.4175\";\n}\n// REMIX HMR END\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CurrencyDropdown from '../components/CurrencyDropdown';\nimport RoundedLinkButton from '~/components/button';\nconst apiUrl = 'https://currency-exchange.p.rapidapi.com';\nfunction CurrencyConverter() {\n  _s();\n  const [currencies, setCurrencies] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState('USD');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [amount, setAmount] = useState(1);\n  const [exchangeRate, setExchangeRate] = useState(null);\n  const params = useParams();\n  useEffect(() => {\n    // Fetch currencies from the API\n    fetch(`${apiUrl}/listquotes`, {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Host': 'currency-exchange.p.rapidapi.com',\n        'X-RapidAPI-Key': '51718725bdmshd55cc7a4537be62p19d336jsnf99a16b27253'\n      }\n    }).then(response => response.json()).then(data => {\n      // Set currencies directly since the response is an array of strings\n      setCurrencies(data);\n    });\n  }, []);\n  useEffect(() => {\n    // Fetch exchange rate when currencies or amount change\n    fetch(`${apiUrl}/exchange?from=${fromCurrency}&to=${toCurrency}&q=${amount}`, {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Host': 'currency-exchange.p.rapidapi.com',\n        'X-RapidAPI-Key': '51718725bdmshd55cc7a4537be62p19d336jsnf99a16b27253'\n      }\n    }).then(response => response.json()).then(data => {\n      setExchangeRate(data);\n    });\n  }, [fromCurrency, toCurrency, amount]);\n  const handleConvert = () => {\n    // Handle conversion logic here\n    if (exchangeRate !== null) {\n      console.log(`Converted amount: ${amount * exchangeRate}`);\n    }\n  };\n\n  // Create the link to the converter page with parameters\n  const converterLink = `/currency-converter/from=${fromCurrency}&to=${toCurrency}&q=${amount}`;\n  return <div>\n      <h1>Currency Converter</h1>\n      <CurrencyDropdown currencies={currencies} selectedCurrency={fromCurrency} onSelectCurrency={setFromCurrency} />\n      <CurrencyDropdown currencies={currencies} selectedCurrency={toCurrency} onSelectCurrency={setToCurrency} />\n      <div className=\"flex flex-col mb-4\">\n        <label htmlFor=\"amount\" className=\"mb-2\">\n          Enter Amount:\n        </label>\n        <input id=\"amount\" type=\"number\" value={amount} onChange={e => setAmount(parseFloat(e.target.value))} className=\"p-2 border border-gray-300 rounded-md\" />\n      </div>\n        {/* Use Link to navigate to the result page with parameters */}\n      <RoundedLinkButton to={\"`/currency-converter/from=${fromCurrency}&to=${params.toCurrency}&q=${params.amount}`\"}>Convert</RoundedLinkButton>\n\n    </div>;\n}\n_s(CurrencyConverter, \"h4O+O7u87aM3SXDNF9sj/0W2ZYs=\", false, function () {\n  return [useParams];\n});\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/CurrencyDropdown.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/CurrencyDropdown.tsx\");\n  import.meta.hot.lastModified = \"1701690320254.1462\";\n}\n// REMIX HMR END\n\n// CurrencyDropdown.js\n\nimport React from 'react';\nfunction CurrencyDropdown({\n  currencies,\n  selectedCurrency,\n  onSelectCurrency\n}) {\n  return <div className=\"flex flex-col mb-4\">\n      <label htmlFor=\"currency\" className=\"mb-2\">\n        Select Currency:\n      </label>\n      <select id=\"currency\" value={selectedCurrency} onChange={e => onSelectCurrency(e.target.value)} className=\"p-2 border border-gray-300 rounded-md\">\n        {currencies.map(currency => <option key={currency} value={currency}>\n            {currency}\n          </option>)}\n      </select>\n    </div>;\n}\n_c = CurrencyDropdown;\nexport default CurrencyDropdown;\nvar _c;\n$RefreshReg$(_c, \"CurrencyDropdown\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c"]
}
