{
  "version": 3,
  "sources": ["../../../app/routes/currency-converter.tsx", "../../../app/components/CurrencyDropdown.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/currency-converter.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/currency-converter.tsx\");\n  import.meta.hot.lastModified = \"1701696669356.119\";\n}\n// REMIX HMR END\n\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport CurrencyDropdown from '../components/CurrencyDropdown';\nconst apiUrl = 'https://currency-exchange.p.rapidapi.com';\nconst headers = {\n  'X-RapidAPI-Host': 'currency-exchange.p.rapidapi.com',\n  'X-RapidAPI-Key': '51718725bdmshd55cc7a4537be62p19d336jsnf99a16b27253' // Replace with your actual API key\n};\nfunction CurrencyConverter() {\n  _s();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [currencies, setCurrencies] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState(searchParams.get('from') || 'USD');\n  const [toCurrency, setToCurrency] = useState(searchParams.get('to') || 'EUR');\n  const [amount, setAmount] = useState(Number(searchParams.get('q')) || 1);\n  const [convertedAmount, setConvertedAmount] = useState(null);\n\n  // Fetch list of currencies on component mount\n  useEffect(() => {\n    fetch(`${apiUrl}/listquotes`, {\n      method: 'GET',\n      headers\n    }).then(response => response.json()).then(data => setCurrencies(data));\n  }, []);\n\n  // Function to handle conversion\n  const performConversion = (fromCurrency, toCurrency, amount) => {\n    fetch(`${apiUrl}/exchange?from=${fromCurrency}&to=${toCurrency}&q=${amount}`, {\n      method: 'GET',\n      headers\n    }).then(response => response.json()).then(conversionRate => {\n      if (!isNaN(conversionRate) && !isNaN(amount)) {\n        const totalConvertedAmount = conversionRate * amount;\n        setConvertedAmount(totalConvertedAmount);\n      } else {\n        console.error('Invalid conversion rate or amount');\n        setConvertedAmount(null);\n      }\n    }).catch(error => {\n      console.error('Error fetching conversion data:', error);\n      setConvertedAmount(null);\n    });\n  };\n\n  // Trigger conversion on component mount and when query params change\n  useEffect(() => {\n    performConversion(fromCurrency, toCurrency, amount);\n  }, [fromCurrency, toCurrency, amount]);\n\n  // Function to handle conversion and URL update on button click\n  const handleConvert = () => {\n    performConversion(fromCurrency, toCurrency, amount);\n    // Update the URL with the new query parameters\n    const newParams = {\n      from: fromCurrency,\n      to: toCurrency,\n      q: amount.toString()\n    };\n    setSearchParams(newParams);\n  };\n  return <div className='bg-gradient-to-b from-indigo-700 to-purple-400 p-8 text-white flex flex-col justify-center items-center text-center gap-8 h-screen'>\n        <div className='flex flex-col gap 6'>\n            <h1 className='text-4xl font-semibold'>Currency Converter</h1>\n            <p>Check live foreign currency exchange rates</p>\n        </div>\n\n        <div className='flex flex-row bg-gradient-to-b from-indigo-700 to-purple-400 py-4 px-8 rounded-xl'>\n            <div>\n                <CurrencyDropdown currencies={currencies} selectedCurrency={fromCurrency} onSelectCurrency={setFromCurrency} />\n            <CurrencyDropdown currencies={currencies} selectedCurrency={toCurrency} onSelectCurrency={setToCurrency} />\n            <div className=\"flex flex-col mb-4\">\n                <label htmlFor=\"amount\" className=\"mb-2\">\n                Enter Amount:\n                </label>\n                <input id=\"amount\" type=\"number\" value={amount} onChange={e => setAmount(parseFloat(e.target.value))} className=\"text-black p-2 border border-gray-300 rounded-md\" />\n            </div>\n        </div>\n        <button className=\"bg-purple-700 text-white p-2 rounded-md cursor-pointer\" onClick={handleConvert}>\n            Convert\n        </button>\n        {convertedAmount !== null && !isNaN(convertedAmount) && <div className=\"mt-4\">\n            <p>Converted Amount: {convertedAmount.toFixed(6)}</p>\n            </div>}\n        </div>\n\n    \n    </div>;\n}\n_s(CurrencyConverter, \"NPwXStqW4bLOWMjSHd+NesYzazY=\", false, function () {\n  return [useSearchParams];\n});\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/CurrencyDropdown.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/CurrencyDropdown.tsx\");\n  import.meta.hot.lastModified = \"1701691385462.26\";\n}\n// REMIX HMR END\n\n// CurrencyDropdown.js\n\nimport React from 'react';\nfunction CurrencyDropdown({\n  currencies,\n  selectedCurrency,\n  onSelectCurrency\n}) {\n  return <div className=\"flex flex-col mb-4 \">\n      <label htmlFor=\"currency\" className=\"mb-2\">\n        Select Currency:\n      </label>\n      <select id=\"currency\" value={selectedCurrency} onChange={e => onSelectCurrency(e.target.value)} className=\"text-black p-2 border border-gray-300 rounded-md\">\n        {currencies.map(currency => <option key={currency} value={currency}>\n            {currency}\n          </option>)}\n      </select>\n    </div>;\n}\n_c = CurrencyDropdown;\nexport default CurrencyDropdown;\nvar _c;\n$RefreshReg$(_c, \"CurrencyDropdown\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "fromCurrency", "toCurrency", "amount", "_c"]
}
